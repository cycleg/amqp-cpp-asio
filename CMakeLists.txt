PROJECT(amqpasio)
CMAKE_MINIMUM_REQUIRED(VERSION 3.7.0)

# build options
OPTION(AMQPASIO_BUILD_SHARED "Build shared library, if on." OFF)
OPTION(AMQPASIO_BUILD_STATIC "Build static library, if on." ON)

SET(CMAKE_INSTALL_PREFIX "/usr")
# GNU filesystem layout conventions
INCLUDE(GNUInstallDirs)
if(CMAKE_LIBRARY_ARCHITECTURE AND EXISTS "/etc/debian_version")
    SET(CMAKE_INSTALL_LIBDIR "${CMAKE_INSTALL_LIBDIR}/${CMAKE_LIBRARY_ARCHITECTURE}")
    SET(CMAKE_INSTALL_FULL_LIBDIR "${CMAKE_INSTALL_FULL_LIBDIR}/${CMAKE_LIBRARY_ARCHITECTURE}")
endif()

SET(Boost_USE_STATIC_LIBS OFF)
SET(Boost_USE_MULTITHREADED ON)
SET(Boost_USE_STATIC_RUNTIME OFF)

FIND_PACKAGE(Boost 1.62 COMPONENTS system thread REQUIRED)
FIND_PACKAGE(PkgConfig REQUIRED MODULE)

PKG_CHECK_MODULES(JSONCPP REQUIRED jsoncpp)
PKG_CHECK_MODULES(AMQPCPP REQUIRED amqpcpp)

SET(CMAKE_CXX_FLAGS "-Wextra -Wall -std=c++14 -Wnon-virtual-dtor -fstack-protector-all")

IF(CMAKE_BUILD_TYPE STREQUAL "Release")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -s")
ENDIF(CMAKE_BUILD_TYPE STREQUAL "Release")

SET(AMQPASIO_VERSION 0.2.0)

SET(HEADERS
    src/AmqpConnectionHandler.hpp
    src/AmqpConnector.hpp
    src/AmqpJsonConverter.hpp
    src/AmqpTransceiver.hpp
)

SET(SOURCES
    src/AmqpConnectionHandler.cpp
    src/AmqpConnector.cpp
    src/AmqpJsonConverter.cpp
    src/AmqpTransceiver.cpp
)

ADD_LIBRARY(objlib OBJECT ${HEADERS} ${SOURCES})

TARGET_INCLUDE_DIRECTORIES(objlib PRIVATE
    ${Boost_INCLUDE_DIR}
    ${JSONCPP_INCLUDE_DIRS}
    ${AMQPCPP_INCLUDE_DIRS}
)

IF(AMQPASIO_BUILD_SHARED)
    SET_PROPERTY(TARGET objlib PROPERTY POSITION_INDEPENDENT_CODE ON)
    ADD_LIBRARY(${PROJECT_NAME} SHARED $<TARGET_OBJECTS:objlib>)
    INSTALL(TARGETS ${PROJECT_NAME}
        LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
        RUNTIME DESTINATION "${CMAKE_INSTALL_LIBDIR}"
    )
ENDIF(AMQPASIO_BUILD_SHARED)

IF(AMQPASIO_BUILD_STATIC)
    ADD_LIBRARY(${PROJECT_NAME}_static STATIC $<TARGET_OBJECTS:objlib>)
    SET_TARGET_PROPERTIES(${PROJECT_NAME}_static PROPERTIES
        OUTPUT_NAME ${PROJECT_NAME}
    )
    INSTALL(TARGETS ${PROJECT_NAME}_static
        ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
    )
ENDIF(AMQPASIO_BUILD_STATIC)

SET(PKG_CONFIG_LIBS "-l${PROJECT_NAME}")
CONFIGURE_FILE(
   "pkg-config/amqpasio.pc.in"
   "pkg-config/amqpasio.pc"
   @ONLY
)
INSTALL(
   FILES "${CMAKE_CURRENT_BINARY_DIR}/pkg-config/amqpasio.pc"
   DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig"
)

INSTALL(DIRECTORY src/ DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/amqpasio"
        FILES_MATCHING PATTERN "*.hpp")

### CPack

SET(CPACK_PACKAGE_NAME "${PROJECT_NAME}-dev")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "C++ library for communicating with a RabbitMQ message broker")
SET(CPACK_PACKAGE_VENDOR "Alexei Golovin")
SET(CPACK_PACKAGE_CONTACT "golovin.alexei@gmail.com")
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_SOURCE_DIR}/README.md")
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/LICENSE")
SET(CPACK_PACKAGE_VERSION "${AMQPASIO_VERSION}")
STRING(REGEX MATCHALL "[0-9]+|-([A-Za-z0-9_]+)" VERSION_PARTS ${CPACK_PACKAGE_VERSION})
LIST(GET VERSION_PARTS 0 CPACK_PACKAGE_VERSION_MAJOR)
LIST(GET VERSION_PARTS 1 CPACK_PACKAGE_VERSION_MINOR)
LIST(GET VERSION_PARTS 2 CPACK_PACKAGE_VERSION_PATCH)
SET(CPACK_PACKAGE_INSTALL_DIRECTORY ${CPACK_PACKAGE_NAME})

SET(CPACK_SET_DESTDIR ON)

FIND_PROGRAM(DPKG_CMD dpkg)
IF(DPKG_CMD)
    SET(CPACK_GENERATOR ${CPACK_GENERATOR} DEB)
ELSE(DPKG_CMD)
    MESSAGE( STATUS "dpkg binary not found, not building debian package" )
ENDIF(DPKG_CMD)

IF(CPACK_GENERATOR STREQUAL "DEB") # linux (deb)
    SET(CPACK_PACKAGING_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
    SET(CPACK_DEBIAN_PACKAGE_PRIORITY optional)
    SET(CPACK_DEBIAN_PACKAGE_SECTION libdevel)
    SET(CPACK_DEBIAN_PACKAGE_DEPENDS
        "libc6, libstdc++6, libboost-system1.62.0, libboost-thread1.62.0, amqpcpp-dev")
    SET(CPACK_DEBIAN_PACKAGE_MAINTAINER
        "Alexei Golovin <a.golovin@pkcc.ru>")
ENDIF(CPACK_GENERATOR STREQUAL "DEB")

INCLUDE(CPack)
